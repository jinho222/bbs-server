{"version":3,"sources":["common/api.js","common/member.js","store/member.js","components/Common/Header.jsx","views/Home.jsx","components/Common/Alert.jsx","components/Common/Spinner.jsx","views/Member/Login.jsx","views/Member/Signup.jsx","components/Board/Pagination.jsx","common/common.js","views/Board/BoardList.jsx","views/Board/BoardWrite.jsx","views/Board/BoardView.jsx","components/Common/AuthRoute.jsx","App.jsx","common/post.js","store/index.js","index.js"],"names":["axios","defaults","baseURL","withCredentials","headers","post","Api","method","url","params","data","then","catch","err","Promise","reject","a","paramsString","URLSearchParams","toString","fullUrl","this","requestBase","Member","requestPost","member","login","createAsyncThunk","res","logout","initialState","basicInfo","isLoading","isError","sessionStorage","getItem","parsed","JSON","parse","loadSessionInfo","memberSlice","createSlice","name","reducers","sessionLogin","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","setItem","stringify","rejected","removeItem","actions","Header","useSelector","dispatch","useDispatch","history","useHistory","location","useLocation","onLogout","alert","push","isLogin","Object","keys","length","checkActive","pathname","className","to","type","id","onClick","Home","Alert","msg","src","alt","Spinner","role","Login","useState","pw","form","setForm","isPwSecret","setIsPwSecret","errorMsg","setErrorMsg","onFormChange","e","target","value","useEffect","htmlFor","placeholder","onChange","formData","FormData","append","entries","forEach","key","console","log","loginSubmit","Signup","setIsLoading","pwRe","tel","includes","replace","go","test","signup","response","status","signupSubmit","Pagination","pageNo","postsPerPage","totalCnt","fetchBoardList","block","setBlock","changeBlock","floored","Math","floor","ceiled","ceil","startIndex","totalPages","endIndex","min","newBlock","i","map","page","onPageClick","getTodayDate","today","Date","year","getFullYear","month","getMonth","slice","date","getDate","usePostContext","useContext","PostContext","BoardList","postCtx","postList","setPostList","pageOption","setPageOption","goToBoardView","index","dataset","useCallback","getList","rest","scope","_id","title","author_name","BoardWrite","content","contentLength","useMemo","submitBoard","updatePost","addPost","maxLength","window","confirm","BoardView","useParams","setPost","getPost","author_id","deletePost","AuthRoute","Component","component","auth","render","props","requestGet","requestPut","requestDelete","React","createContext","App","Provider","exact","path","reducer","combineReducers","store","configureStore","middleware","getDefaultMiddleware","concat","logger","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.085cd988.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = process.env.NODE_ENV === 'production'\r\n\t\t\t\t\t\t\t\t\t\t\t\t? '//127.0.0.1:8080'\r\n\t\t\t\t\t\t\t\t\t\t\t\t: '/';\r\naxios.defaults.withCredentials = true;\r\naxios.defaults.headers.post['Content-Type'] = 'multipart/form-data';\r\n\r\nclass Api {\r\n \trequestBase(method, url, params) {\r\n\t\treturn axios({\r\n\t\t\tmethod,\r\n\t\t\turl,\r\n\t\t\tdata: params,\r\n\t\t}).then(({ data }) => data)\r\n\t\t\t.catch(err => Promise.reject(err));\r\n\t}\r\n\t\r\n\tasync requestGet(url, params = {}) {\r\n\t\tconst paramsString = new URLSearchParams(params).toString();\r\n\t\tconst fullUrl = `${url}?${paramsString}`;\r\n\t\treturn await this.requestBase('get', fullUrl);\r\n\t}\r\n\t\r\n\tasync requestPost(url, params) {\r\n\t\treturn await this.requestBase('post', url, params);\t\r\n\t}\r\n\t\r\n\tasync requestPut(url, params) {\r\n\t\treturn await this.requestBase('put', url, params);\r\n\t}\r\n\t\r\n\tasync requestDelete(url, params) {\r\n\t\treturn await this.requestBase('delete', url, params);\r\n\t}\r\n}\r\n\r\nexport default Api;","import Api from \"./api\";\r\n\r\nclass Member extends Api {\r\n\t// eslint-disable-next-line\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tasync signup(params) {\r\n\t\treturn await this.requestPost('/member/signup', params);\r\n\t}\r\n\r\n\tasync login(params) {\r\n\t\treturn await this.requestPost('/member/login', params);\r\n\t}\r\n\r\n\tasync logout(params) {\r\n\t\treturn await this.requestPost('/member/logout', params);\r\n\t}\r\n}\r\n\r\nexport default Member;\t","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport Member from '../common/member';\r\n\r\nconst member = new Member();\r\n\r\nexport const login = createAsyncThunk(\r\n\t'login',\t\r\n\tasync (params) => {\r\n\t\tconst res = await member.login(params)\r\n\t\treturn res;\r\n\t}\r\n)\r\n\r\nexport const logout = createAsyncThunk(\r\n\t'logout',\t\r\n\tasync (params) => {\r\n\t\tconst res = await member.logout(params)\r\n\t\treturn res;\r\n\t}\r\n)\r\n\r\nconst initialState = {\r\n\tbasicInfo: {},\r\n\tisLoading: false,\r\n\tisError: false,\r\n}\r\n\r\n// 새로고침시 세션 정보를 가져오는 함수\r\nfunction loadSessionInfo() {\r\n\tif (sessionStorage.getItem('basicInfo')) {\r\n\t\tconst parsed = JSON.parse(sessionStorage.getItem('basicInfo'));\r\n\t\tinitialState.basicInfo = parsed;\r\n\t}\r\n}\r\n\r\nloadSessionInfo();\r\n\r\nconst memberSlice = createSlice({\r\n\tname: 'member',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsessionLogin(state, action) {\r\n\t\t\tstate.basicInfo = action.payload;\r\n\t\t}\r\n\t},\r\n\textraReducers: builder => {\r\n\t\tbuilder\r\n\t\t.addCase(login.pending, (state, action) => {\r\n\t\t\tstate.isLoading = true;\r\n\t\t\tstate.isError = false;\r\n\t\t})\r\n\t\t.addCase(login.fulfilled, (state, action) => {\r\n\t\t\tstate.basicInfo = action.payload;\r\n\t\t\tstate.isLoading = false;\r\n\t\t\tstate.isError = false;\r\n\r\n\t\t\t/* sessionStorage */\r\n\t\t\tsessionStorage.setItem('basicInfo', JSON.stringify(state.basicInfo));\r\n\t\t})\r\n\t\t.addCase(login.rejected, (state, action) => {\r\n\t\t\tstate.isLoading = false;\r\n\t\t\tstate.isError = true;\r\n\t\t})\r\n\t\t.addCase(logout.pending, (state, action) => {\r\n\t\t\tstate.isLoading = true;\r\n\t\t\tstate.isError = false;\r\n\t\t})\r\n\t\t.addCase(logout.fulfilled, (state, action) => {\r\n\t\t\tstate.basicInfo = {};\r\n\t\t\tstate.isLoading = false;\r\n\t\t\tstate.isError = false;\r\n\t\t\t\r\n\t\t\t/* sessionStorage */\r\n\t\t\tsessionStorage.removeItem('basicInfo');\r\n\t\t})\r\n\t\t.addCase(logout.rejected, (state, action) => {\r\n\t\t\tstate.isLoading = false;\r\n\t\t\tstate.isError = true;\r\n\t\t})\r\n\t}\r\n});\r\n\r\nexport const { sessionLogin } = memberSlice.actions;\r\nexport default memberSlice;","import { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { logout } from \"../../store/member\";\r\n\r\nexport default function Header() {\r\n\t/* hooks */\r\n\tconst { basicInfo } = useSelector(state => state.member);\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\t\t\r\n\r\n\t/* method */\r\n\tconst onLogout = async () => {\r\n\t\tawait dispatch(logout())\r\n\t\talert('로그아웃되었습니다.');\r\n\t\thistory.push('/');\r\n\t};\r\n\t\r\n\tconst isLogin = Object.keys(basicInfo).length > 0;\r\n\t\r\n\tconst checkActive = params => location.pathname === params ? 'active' : '';\r\n\t\r\n\treturn (\r\n\t\t<nav className=\"navbar navbar-expand-md navbar-dark bg-primary\">\r\n\t\t\t<div className=\"container-fluid\">\r\n\t\t\t\t<h1 className=\"d-flex\">\r\n\t\t\t\t\t<Link className=\"navbar-brand\" to=\"/\">BBS</Link>\r\n\t\t\t\t</h1>\r\n\t\t\t\t<button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\">\r\n\t\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\r\n\t\t\t\t</button>\r\n\t\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n\t\t\t\t\t<ul className=\"navbar-nav\">\r\n\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t<Link className={`nav-link ${checkActive('/')}`} to=\"/\">홈</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t<Link className={`nav-link ${checkActive('/board-list')}`} to=\"/board-list\">게시판</Link>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tisLogin\r\n\t\t\t\t\t\t\t? <li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\tclassName=\"nav-link\" \r\n\t\t\t\t\t\t\t\tonClick={onLogout}\r\n\t\t\t\t\t\t\t\t>로그아웃</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t: <>\r\n\t\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t\t<Link className={`nav-link ${checkActive('/signup')}`} to=\"/signup\">회원가입</Link>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t\t<Link className={`nav-link ${checkActive('/login')}`} to=\"/login\">로그인</Link>\r\n\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t)\r\n}","import { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function Home() {\r\n\tconst { basicInfo } = useSelector(state => state.member);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"p-5 bg-light rounded-3\">\r\n\t\t\t\t<div className=\"container-fluid py-5\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tObject.keys(basicInfo).length > 0\r\n\t\t\t\t\t\t? <>\r\n\t\t\t\t\t\t\t<h2 className=\"display-5 fw-bold\">{`${basicInfo.name}님, 안녕하세요!`}</h2>\r\n\t\t\t\t\t\t\t<p className=\"col-md-8 fs-4\">게시판을 이용해보세요 :)</p>\r\n\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tclassName=\"btn btn-success btn-lg\"\r\n\t\t\t\t\t\t\tto=\"/board-list\"\r\n\t\t\t\t\t\t\t>글쓰러가기</Link>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t: <>\r\n\t\t\t\t\t\t\t<h2 className=\"display-5 fw-bold\">환영합니다!</h2>\r\n\t\t\t\t\t\t\t<p className=\"col-md-8 fs-4\">로그인하고 게시판을 이용해보세요 :)</p>\r\n\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tclassName=\"btn btn-success btn-lg\"\r\n\t\t\t\t\t\t\tto=\"/login\"\r\n\t\t\t\t\t\t\t>로그인하러가기</Link>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n};","export default function Alert({ msg }) {\r\n\treturn (\r\n\t\t\t<div className=\"alert alert-danger d-flex\">\r\n\t\t\t\t\t<img src=\"/images/error-warning-line.png\" alt=\"유효하지않음\" />\r\n\t\t\t\t\t<span className=\"ms-2\">{msg}</span>\r\n\t\t\t</div>\r\n\t)\r\n}","export default function Spinner({ type }) {\r\n\r\n\treturn (\r\n\t\t<section className={`spinner-bg ${type === 'full' ? 'spinner-bg-dark' : ''}`}>\r\n\t\t\t<div className=\"spinner\">\r\n\t\t\t\t<div className=\"spinner-border text-primary\" role=\"status\">\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t)\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Alert from \"../../components/Common/Alert\";\r\nimport Spinner from \"../../components/Common/Spinner\";\r\nimport { login } from \"../../store/member\";\r\n\r\nconst Login = () => {\t\r\n\t/* hooks */\r\n\tconst history = useHistory();\r\n\tconst { basicInfo, isLoading, isError } = useSelector(state => state.member);\r\n\tconst dispatch = useDispatch();\r\n\t\r\n\t/* status */\r\n\tconst [form, setForm] = useState({\r\n\t\tid: '',\r\n\t\tpw: '',\r\n\t});\r\n\tconst [isPwSecret, setIsPwSecret] = useState(true);\r\n\tconst [errorMsg, setErrorMsg] = useState('');\r\n\r\n\t/* method */\r\n\tconst loginSubmit = () => {\r\n\t\tconst { id, pw } = form;\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('id', id);\r\n\t\tformData.append('pw', pw);\r\n\r\n\t\t[...formData.entries()].forEach(([key, data]) => console.log(`${key} => ${data}`));\r\n\r\n\t\tdispatch(login(formData)).then()\r\n\t};\r\n\r\n\tconst onSubmit = () => {\r\n\t\tif (!form.id) {\r\n\t\t\tsetErrorMsg('아이디를 입력해주세요.');\r\n\t\t} else if (!form.pw) {\r\n\t\t\tsetErrorMsg('비밀번호를 입력해주세요.');\r\n\t\t} else {\r\n\t\t\tsetErrorMsg('');\r\n\t\t\tloginSubmit();\r\n\t\t}\r\n\t}\r\n\r\n\tconst onFormChange = e => {\r\n\t\tconst { name, value } = e.target;\r\n\r\n\t\tsetForm({\r\n\t\t\t...form,\r\n\t\t\t[name]: value,\r\n\t\t});\r\n\t};\r\n\r\n\t/* effect */\r\n\tuseEffect(() => {\r\n\t\tif (!isLoading) {\r\n\t\t\tif (isError) {\r\n\t\t\t\talert('아이디 또는 비밀번호가 잘못되었습니다.\\n다시 시도해주세요.');\r\n\t\t\t} else if (Object.keys(basicInfo).length > 0) { // 로그인 성공시\r\n\t\t\t\thistory.push('/')\r\n\t\t\t}\r\n\t\t}\r\n\t}, [basicInfo, isLoading, isError, history]);\r\n\r\n\t/* template */\r\n\treturn (\r\n\t\t<>\r\n\t\t<div className=\"card\">\r\n\t\t\t<div className=\"card-header\">\r\n\t\t\t\t<h2>로그인</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"card-body\">\r\n\t\t\t\t{ errorMsg.length > 0 && <Alert msg={errorMsg}></Alert> }\r\n\t\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t\t<label htmlFor=\"id\" className=\"form-label\">아이디</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\tid=\"id\"\r\n\t\t\t\t\tplaceholder=\"아이디를 입력하세요.\"\r\n\t\t\t\t\tname=\"id\"\r\n\t\t\t\t\tvalue={form.id}\r\n\t\t\t\t\tonChange={onFormChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t\t<label htmlFor=\"pw\" className=\"form-label\">비밀번호</label>\r\n\t\t\t\t\t<div className=\"position-relative\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype={isPwSecret ? \"password\" : \"text\"}\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tid=\"pw\"\r\n\t\t\t\t\t\tplaceholder=\"비밀번호를 입력하세요.\"\r\n\t\t\t\t\t\tname=\"pw\"\r\n\t\t\t\t\t\tvalue={form.pw}\r\n\t\t\t\t\t\tonChange={onFormChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<img \r\n\t\t\t\t\t\tclassName=\"password_secret\"\r\n\t\t\t\t\t\tsrc={isPwSecret ? \"/images/eye-on.png\" : \"/images/eye-off.png\"}\r\n\t\t\t\t\t\tonClick={() => setIsPwSecret(!isPwSecret)}\r\n\t\t\t\t\t\talt=\"비밀번호 보기\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button\r\n\t\t\t\tclassName=\"btn btn-primary d-block mx-auto\"\r\n\t\t\t\tonClick={onSubmit}\r\n\t\t\t\t>로그인</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t{\r\n\t\t\tisLoading && <Spinner type=\"full\"></Spinner>\r\n\t\t}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Login;","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Spinner from \"../../components/Common/Spinner\";\r\nimport Member from \"../../common/member\";\r\nimport Alert from '../../components/Common/Alert';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst member = new Member();\r\n\r\nexport default function Signup() {\t\r\n\t/* hooks */\r\n\tconst history = useHistory();\r\n\tconst { basicInfo } = useSelector(state => state.member);\r\n\r\n\t/* status */\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\tconst [form, setForm] = useState({\r\n\t\tid: '',\r\n\t\tpw: '',\r\n\t\tpwRe: '',\r\n\t\tname: '',\r\n\t\ttel: '',\r\n\t});\r\n\tconst [errorMsg, setErrorMsg] = useState('');\r\n\r\n\t/* method */\r\n\tconst signupSubmit = () => {\r\n\t\tconst { id, pw, name, tel } = form;\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('id', id);\r\n\t\tformData.append('pw', pw);\r\n\t\tformData.append('name', name);\r\n\t\tformData.append('tel', tel);\r\n\r\n\t\t// form data check for debugging\r\n\t\t[...formData.entries()].forEach(([key, data]) => console.log(`${key} => ${data}`));\r\n\t\t\r\n\t\tsetIsLoading(true);\r\n\t\tmember.signup(formData).then(data => {\r\n\t\t\talert('회원가입에 성공했습니다.\\n로그인하고 서비스를 이용해보세요.');\r\n\t\t\tsetIsLoading(false);\r\n\t\t\thistory.push('/login');\r\n\t\t}).catch(e => {\r\n\t\t\tif (e.response && e.response.status === 409) alert('이미 존재하는 아이디입니다.');\r\n\t\t\telse alert('서버상 에러입니다.\\n잠시 후에 다시 시도해주세요.');\r\n\t\t\tsetIsLoading(false);\r\n\t\t});\r\n\t};\r\n\t\r\n\tconst onFormSubmit = () => {\r\n\t\tconst { id, pw, pwRe, name, tel } = form;\r\n\t\tif (!id) {\r\n\t\t\tsetErrorMsg('아이디를 입력해주세요.');\r\n\t\t} else if (!pw || pw.length < 4) {\r\n\t\t\tsetErrorMsg('비밀번호를 4자 이상 입력해주세요.');\r\n\t\t} else if (!pwRe) {\r\n\t\t\tsetErrorMsg('비밀번호 재확인을 입력해주세요.');\r\n\t\t} else if (pw !== pwRe) {\r\n\t\t\tsetErrorMsg('비밀번호가 일치하지 않습니다.');\r\n\t\t} else if (!name) {\r\n\t\t\tsetErrorMsg('이름을 입력해주세요.');\r\n\t\t}\telse if (!tel) {\r\n\t\t\tsetErrorMsg('연락처를 입력해주세요.');\r\n\t\t} else if (!/^\\d{9,11}$/.test(tel)) {\r\n\t\t\tsetErrorMsg('유효한 연락처 형식이 아닙니다.');\r\n\t\t} else {\r\n\t\t\tsetErrorMsg('');\r\n\t\t\tsignupSubmit();\r\n\t\t}\r\n\t};\r\n\r\n\tconst onFormChange = e => {\r\n\t\tconst { name, value } = e.target;\r\n\r\n\t\tlet res = value;\r\n\t\tif (['id', 'pw', 'pwRe'].includes(name)) {\r\n\t\t\t// 아이디, 비밀번호에 한글 입력 불가\r\n\t\t\tres = value.replace(/[^a-zA-Z0-9]/g, ''); \r\n\t\t} else if (name === 'tel') {\r\n\t\t\t// 연락처에 숫자 제외 입력 불가\r\n\t\t\tres = value.replace(/[^\\d]/g, '');\r\n\t\t}\r\n\r\n\t\tsetForm({\r\n\t\t\t...form,\r\n\t\t\t[name]: res,\r\n\t\t});\r\n\t};\r\n\r\n\t/* effects */\r\n\tuseEffect(() => {\r\n\t\t// 로그인한 회원은 접근 불가\r\n\t\tif (Object.keys(basicInfo).length > 0) {\r\n\t\t\thistory.go(-1);\r\n\t\t}\r\n\t}, [basicInfo, history]);\r\n\r\n\t/* template */\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"card\">\r\n\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t<h2>회원가입</h2>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t{ (errorMsg.length > 0) && <Alert msg={errorMsg}></Alert>}\r\n\t\t\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t\t\t<label htmlFor=\"id\" className=\"form-label\">아이디</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tid=\"id\"\r\n\t\t\t\t\t\tplaceholder=\"아이디를 입력하세요.\"\r\n\t\t\t\t\t\tname=\"id\"\r\n\t\t\t\t\t\tvalue={form.id}\r\n\t\t\t\t\t\tonChange={onFormChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t\t\t<label htmlFor=\"pw\" className=\"form-label\">비밀번호</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tid=\"pw\"\r\n\t\t\t\t\t\tplaceholder=\"비밀번호를 입력하세요.\"\r\n\t\t\t\t\t\tname=\"pw\"\r\n\t\t\t\t\t\tvalue={form.pw}\r\n\t\t\t\t\t\tonChange={onFormChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t\t\t<label htmlFor=\"pwRe\" className=\"form-label\">비밀번호 재확인</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tplaceholder=\"비밀번호를 다시 입력해주세요.\"\r\n\t\t\t\t\t\tname=\"pwRe\"\r\n\t\t\t\t\t\tvalue={form.pwRe}\r\n\t\t\t\t\t\tonChange={onFormChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t\t\t<label htmlFor=\"name\" className=\"form-label\">이름</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\tplaceholder=\"이름을 입력하세요.\"\r\n\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\tvalue={form.name}\r\n\t\t\t\t\t\tonChange={onFormChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t\t\t<label htmlFor=\"tel\" className=\"form-label\">연락처</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tid=\"tel\"\r\n\t\t\t\t\t\tplaceholder=\"-를 제외하고 입력해주세요.\"\r\n\t\t\t\t\t\tname=\"tel\"\r\n\t\t\t\t\t\tvalue={form.tel}\r\n\t\t\t\t\t\tonChange={onFormChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"btn btn-primary d-block mx-auto\"\r\n\t\t\t\t\tonClick={onFormSubmit}\r\n\t\t\t\t\t>회원가입</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{\r\n\t\t\t\tisLoading && <Spinner type=\"full\"/>\r\n\t\t\t}\r\n\t\t</>\r\n\t);\r\n}","import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Pagination({\r\n\tpageNo,\r\n\tpostsPerPage,\r\n\ttotalCnt,\r\n\tfetchBoardList,\r\n}) {\r\n\t/* states */\r\n\tconst [block, setBlock] = useState(null);\r\n\r\n\t\t\r\n\t/* methods */\r\n\tconst onPageClick = page => {\r\n\t\tfetchBoardList(page);\r\n\t}\r\n\r\n\tconst changeBlock = params => {\r\n\t\tif (params === 'prev') {\r\n\t\t\tconst floored = Math.floor((pageNo - 1) / postsPerPage) * postsPerPage;\r\n\t\t\tif (floored === 0) {\r\n\t\t\t\talert('처음 페이지입니다.');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tfetchBoardList(floored);\t\r\n\t\t} else if (params === 'next') {\r\n\t\t\tconst ceiled = Math.ceil(pageNo / postsPerPage) * postsPerPage + 1;\r\n\t\t\tconst totalPages = Math.ceil(totalCnt / postsPerPage); \r\n\t\t\tif (ceiled > totalPages) {\r\n\t\t\t\talert('마지막 페이지입니다');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tfetchBoardList(ceiled);\t\r\n\t\t}\r\n\t}\r\n\t\r\n\t/* effects */\r\n\tuseEffect(() => {\r\n\t\tconst startIndex = Math.floor((pageNo - 1) / postsPerPage) * postsPerPage + 1\r\n\r\n\t\tconst ceiled = Math.ceil(pageNo / postsPerPage) * postsPerPage;\r\n\t\tconst totalPages = Math.ceil(totalCnt / postsPerPage);\r\n\t\tconst endIndex = Math.min(ceiled, totalPages);\r\n\r\n\t\tconst newBlock = [];\r\n\t\tfor (let i = startIndex; i < endIndex + 1; i++) { newBlock.push(i) };\r\n\t\tsetBlock([...newBlock]);\r\n\t\tconsole.log(startIndex, endIndex, newBlock);\r\n\t}, [pageNo, postsPerPage, totalCnt]);\r\n\r\n\r\n\treturn (\r\n\t\t<nav>\r\n\t\t\t<ul className=\"pagination mb-0\">\r\n\t\t\t\t<li className=\"page-item\" onClick={() => changeBlock('prev')}>\r\n\t\t\t\t\t<span className=\"page-link\">&lt;</span>\r\n\t\t\t\t</li>\r\n\t\t\t\t{\r\n\t\t\t\t\tblock?.length > 0 &&\r\n\t\t\t\t\tblock.map(page => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\tclassName={`page-item ${pageNo === page ? 'active' : ''} ` }\r\n\t\t\t\t\t\t\tkey={page}\r\n\t\t\t\t\t\t\tonClick={() => onPageClick(page)}>\r\n\t\t\t\t\t\t\t\t<span className=\"page-link\">{ page }</span>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\t<li className=\"page-item\" onClick={() => changeBlock('next')}>\r\n\t\t\t\t\t<span className=\"page-link\">&gt;</span>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t);\r\n};","import { useContext } from \"react\";\r\nimport { PostContext } from \"../App\";\r\n\r\nexport function getTodayDate() {\r\n\tconst today = new Date();\r\n\tconst year = today.getFullYear();\r\n\tconst month = `0${today.getMonth() + 1}`.slice(-2);\r\n\tconst date = `0${today.getDate()}`.slice(-2);\r\n\treturn `${year}-${month}-${date}`;\r\n}\r\n\r\nexport function usePostContext() {\r\n\treturn useContext(PostContext)\r\n}","import Pagination from '../../components/Board/Pagination';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { usePostContext } from '../../common/common';\r\nimport Spinner from '../../components/Common/Spinner';\r\nimport { useCallback } from 'react';\r\n\r\nconst BoardList = () => {\r\n\t/* hooks */\r\n\tconst history = useHistory();\r\n\tconst postCtx = usePostContext();\r\n\t/* state */\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [postList, setPostList] = useState([]);\r\n\tconst [pageOption, setPageOption] = useState({});\r\n\r\n\t/* method */\r\n\tconst goToBoardView = e => {\r\n\t\tconst { index } = e.target.dataset;\r\n\t\thistory.push(`/board-view/${index}`);\r\n\t}\r\n\r\n\tconst fetchBoardList = useCallback((pageNo = 1) => {\r\n\t\tconst params = { pageNo };\r\n\t\tsetIsLoading(true);\r\n\t\tpostCtx.getList(params).then(res => {\r\n\t\t\tconsole.log(res);\r\n\t\t\tconst { postList, ...rest } = res;\r\n\t\t\tsetPostList(postList);\r\n\t\t\tsetPageOption(rest);\r\n\t\t\tsetIsLoading(false);\r\n\t\t}).catch(e => {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsetIsLoading(false);\r\n\t\t});\r\n\t}, [postCtx]);\r\n\r\n\t/* effect */\r\n\tuseEffect(() => {\r\n\t\tfetchBoardList();\r\n\t}, [postCtx, fetchBoardList]);\r\n\r\n\tif (isLoading) return <Spinner></Spinner>;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t<table className=\"table\">\r\n\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th scope=\"col\">No.</th>\r\n\t\t\t\t\t\t<th scope=\"col\">제목</th>\r\n\t\t\t\t\t\t<th scope=\"col\">작성자</th>\r\n\t\t\t\t\t\t<th scope=\"col\">날짜</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t</thead>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t(postList.length > 0 ) &&\r\n\t\t\t\t\t\tpostList.map(post => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<tr key={post._id}>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"row\">{post._id}</th>\r\n\t\t\t\t\t\t\t\t\t<td className=\"board-list-title\" data-index={post._id} onClick={goToBoardView}>\r\n\t\t\t\t\t\t\t\t\t\t{post.title}\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>{post.author_name}</td>\r\n\t\t\t\t\t\t\t\t\t<td>{post.date}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t\t<div className=\"d-flex justify-content-center position-relative\">\r\n\t\t\t{\r\n\t\t\t\tpostList.length > 0 &&\r\n\t\t\t\t<Pagination {...pageOption} fetchBoardList={fetchBoardList}/>\r\n\t\t\t}\r\n\t\t\t<Link\r\n\t\t\tclassName=\"btn btn-primary btn-write\"\r\n\t\t\tto={{\r\n\t\t\t\tpathname: '/board-write',\r\n\t\t\t\tstate: { status: 'write' },\r\n\t\t\t}}\r\n\t\t\t>글쓰기</Link>\r\n\t\t</div>\r\n\t\t</>\r\n\t)\r\n};\r\n\r\nexport default BoardList;","import { useMemo, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport Alert from \"../../components/Common/Alert\";\r\nimport { getTodayDate, usePostContext } from \"../../common/common\";\r\nimport Spinner from \"../../components/Common/Spinner\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst BoardWrite = () => {\r\n\t/* hooks */\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst postCtx = usePostContext();\r\n\tconst { basicInfo } = useSelector(state => state.member);\r\n\r\n\t/* state */\r\n\tconst [form, setForm] = useState({\r\n\t\ttitle: '',\r\n\t\tcontent: '',\r\n\t});\r\n\tconst [errorMsg, setErrorMsg] = useState('');\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\r\n\t/* memo */\r\n\tconst contentLength = useMemo(() => {\r\n\t\treturn form.content.length;\r\n\t}, [form.content]);\r\n\r\n\t/* method */\r\n\tconst onFormChange = e => {\r\n\t\tconst { name, value } = e.target;\r\n\t\tsetForm({\r\n\t\t\t...form,\r\n\t\t\t[name]: value,\r\n\t\t});\r\n\t};\r\n\r\n\tconst goToList = () => {\r\n\t\tconst isCancel = window.confirm('작성하고 계시던 글 내용은 저장되지 않습니다.\\n목록으로 이동하시겠습니까?');\r\n\t\tif (!isCancel) return;\r\n\t\thistory.push('/board-list');\r\n\t};\r\n\r\n\tconst submitBoard = async () => {\r\n\t\tconst { title, content } = form;\r\n\t\tconst { _id, id, name } = basicInfo;\r\n\t\tconst { status, post } = location.state;\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('title', title);\r\n\t\tformData.append('content', content);\r\n\t\tformData.append('author_id', id);\r\n\t\tformData.append('author_name', name);\r\n\t\t\r\n\t\tsetIsLoading(true);\r\n\t\ttry {\r\n\t\t\tif (status === 'edit') {\r\n\t\t\t\tformData.append('_id', post._id);\r\n\t\t\t\tawait postCtx.updatePost(formData);\r\n\t\t\t} else {\r\n\t\t\t\tformData.append('author_idx', _id);\r\n\t\t\t\tformData.append('date', getTodayDate());\r\n\t\t\t\tawait postCtx.addPost(formData)\r\n\t\t\t}\r\n\t\t\tconst msg = `게시물이 ${status === 'edit' ? '수정' : '등록'}되었습니다.`;\r\n\t\t\talert(msg);\r\n\t\t\tsetIsLoading(false);\r\n\t\t\tif (status === 'edit') history.push(`/board-view/${post._id}`);\r\n\t\t\telse history.push('/board-list');\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsetIsLoading(false);\r\n\t\t\talert('서버상 오류가 발생했습니다.\\n잠시 후 다시 시도해주세요.');\r\n\t\t}\r\n\t}\r\n\r\n\tconst onSubmit = () => {\r\n\t\tconsole.log('submit');\r\n\t\tconst { title, content } = form;\r\n\t\tif (!title) {\r\n\t\t\tsetErrorMsg('제목을 입력해주세요.');\r\n\t\t} else if (!content) {\r\n\t\t\tsetErrorMsg('내용을 입력해주세요.');\r\n\t\t} else {\r\n\t\t\tsetErrorMsg('');\r\n\t\t\tsubmitBoard();\r\n\t\t}\r\n\t}\r\n\r\n\t/* effects */\r\n\tuseEffect(() => {\r\n\t\tconst { status, post } = location.state;\r\n\t\tif (status !== 'edit') return;\r\n\t\t// 글 수정인 경우에만\r\n\t\tsetForm({...post});\r\n\t}, [location]);\r\n\r\n\t/* template */\r\n  return (\r\n\t\t<>\r\n\t\t<div className=\"card\">\r\n\t\t\t<div className=\"card-header\">\r\n\t\t\t\t<h2>글쓰기</h2>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"card-body\">\r\n\t\t\t\t{\r\n\t\t\t\t\terrorMsg.length > 0 &&\r\n\t\t\t\t\t<Alert msg={errorMsg}></Alert>\r\n\t\t\t\t}\r\n\t\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t\t<label htmlFor=\"title\" className=\"form-label\">제목</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\tid=\"title\"\r\n\t\t\t\t\tplaceholder=\"제목\"\r\n\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\tvalue={form.title}\r\n\t\t\t\t\tonChange={onFormChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t\t<label htmlFor=\"content\" className=\"form-label\">내용</label>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\tclassName={`form-control board-write-textarea ${contentLength >= 500 ? 'input-error' : ''}`}\r\n\t\t\t\t\tid=\"content\"\r\n\t\t\t\t\tplaceholder=\"내용은 최대 500자까지 입력가능합니다.\"\r\n\t\t\t\t\tmaxLength=\"500\"\r\n\t\t\t\t\tname=\"content\"\r\n\t\t\t\t\tvalue={form.content}\r\n\t\t\t\t\tonChange={onFormChange}\r\n\t\t\t\t\t></textarea>\r\n\t\t\t\t\t<p className={`text-end mb-0 mt-2 ${contentLength >= 500 ? 'input-error-msg' : ''}`}>\r\n\t\t\t\t\t\t{`${contentLength}/500`}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div className=\"d-flex justify-content-end mt-4\">\r\n\t\t\t<button\r\n\t\t\tclassName=\"btn btn-secondary\"\r\n\t\t\tonClick={goToList}\r\n\t\t\t>목록</button>\r\n\t\t\t<button\r\n\t\t\tclassName=\"btn btn-primary ms-2\"\r\n\t\t\tonClick={onSubmit}\r\n\t\t\t>등록</button>\r\n\t\t</div>\r\n\t\t{\r\n\t\t\tisLoading && <Spinner type=\"full\"></Spinner>\r\n\t\t}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default BoardWrite;","import { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { usePostContext } from \"../../common/common\";\r\nimport Spinner from \"../../components/Common/Spinner\";\r\n\r\nconst BoardView = () => {\r\n\t/* hooks */\r\n\tconst params = useParams();\r\n\tconst postCtx = usePostContext();\r\n\tconst history = useHistory();\r\n\tconst { basicInfo } = useSelector(state => state.member);\r\n\r\n\t/* state */\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [post, setPost] = useState({});\r\n\r\n\t/* methods */\r\n\tconst onDelete = () => {\r\n\t\tconst isCancel = window.confirm('정말 삭제하시겠습니까?');\r\n\t\tif (!isCancel) return;\r\n\t\tconst formData = new FormData();\r\n\t\tformData.append('_id', post._id);\r\n\t\tpostCtx.deletePost(formData).then(res => {\r\n\t\t\talert('게시물이 삭제되었습니다.');\r\n\t\t\thistory.push('/board-list');\r\n\t\t}).catch(e => {\r\n\t\t\tconsole.log(e);\r\n\t\t\talert('서버상 오류가 발생했습니다.\\n잠시 후 다시 시도해주세요.');\r\n\t\t})\r\n\t}\r\n\r\n\t/* effect */\r\n\tuseEffect(() => {\r\n\t\tsetIsLoading(true);\r\n\t\tpostCtx.getPost({...params}).then(res => {\r\n\t\t\tsetPost(res);\r\n\t\t\tsetIsLoading(false);\r\n\t\t}).catch(e => {\r\n\t\t\tconsole.log(e);\r\n\t\t\tsetIsLoading(false);\r\n\t\t});\r\n\t}, [params, postCtx]);\r\n\r\n\tif (isLoading) return <Spinner></Spinner>;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t{\r\n\t\t\t(Object.keys(post).length > 0) &&\r\n\t\t\t<>\r\n\t\t\t<div className=\"card\">\r\n\t\t\t\t<article className=\"card-body\">\r\n\t\t\t\t\t<h2 className=\"card-title\">{ post.title }</h2>\r\n\t\t\t\t\t<p className=\"d-flex justify-content-between mt-1 align-items-center text-secondary\">\r\n\t\t\t\t\t\t<span >{post.author_name}</span>\r\n\t\t\t\t\t\t<span>{post.date}</span>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t\t<pre className=\"card-text post-content pt-3\">{ post.content }</pre>\r\n\t\t\t\t</article>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"d-flex justify-content-end mt-2\">\r\n\t\t\t\t{\r\n\t\t\t\t\t(basicInfo.id === post.author_id) &&\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t<Link\r\n\t\t\t\t\tclassName=\"btn btn-success\"\r\n\t\t\t\t\tto={{\r\n\t\t\t\t\t\tpathname: '/board-write',\r\n\t\t\t\t\t\tstate: { \r\n\t\t\t\t\t\t\tstatus: 'edit',\r\n\t\t\t\t\t\t\tpost: {...post},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}}>수정</Link>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"btn btn-danger ms-1\"\r\n\t\t\t\t\tonClick={onDelete}>삭제</button>\r\n\t\t\t\t\t</>\r\n\t\t\t\t}\r\n\t\t\t\t<Link\r\n\t\t\t\tclassName=\"btn btn-secondary ms-1\"\r\n\t\t\t\tto=\"/board-list\">목록</Link>\r\n\t\t\t</div>\r\n\t\t\t</>\r\n\t\t}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default BoardView;","import { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport default function AuthRoute({ component: Component, auth, ...rest }) {\r\n\tif (!auth) {\r\n\t\talert('로그인한 회원만 이용 가능합니다.\\n로그인하시고 서비스를 이용해보세요!')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Route\r\n\t\t{...rest}\r\n\t\trender={props => auth\r\n\t\t\t? <Component {...props} />\r\n\t\t\t: <Redirect to=\"/login\" {...props}/>\r\n\t\t}\r\n\t\t></Route>\r\n\t)\r\n}\r\n","import Header from \"./components/Common/Header\";\r\nimport {\r\n\tBrowserRouter,\r\n\tSwitch,\r\n\tRoute,\r\n} from 'react-router-dom';\r\nimport Home from './views/Home';\r\nimport Login from \"./views/Member/Login\";\r\nimport Signup from \"./views/Member/Signup\";\r\nimport BoardList from \"./views/Board/BoardList\";\r\nimport BoardWrite from \"./views/Board/BoardWrite\";\r\nimport BoardView from \"./views/Board/BoardView\";\r\nimport React from \"react\";\r\nimport Post from \"./common/post\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AuthRoute from \"./components/Common/AuthRoute\";\r\n\r\nconst post = new Post();\r\n\r\nexport const PostContext = React.createContext(null);\r\n\r\nexport default function App() {\r\n\t/* hooks */\r\n\tconst { basicInfo } = useSelector(state => state.member);\r\n\r\n\t/* memo */\r\n\tconst isLogin = Object.keys(basicInfo).length > 0\r\n\r\n\treturn (\r\n\t\t<PostContext.Provider value={post}>\r\n\t\t\t<BrowserRouter>\r\n\t\t\t\t<Header></Header>\r\n\t\t\t\t<main className=\"container pt-4\">\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route exact path=\"/\" component={Home}/>\r\n\t\t\t\t\t\t<Route path=\"/login\" component={Login}/>\r\n\t\t\t\t\t\t<Route path=\"/signup\" component={Signup}/>\r\n\t\t\t\t\t\t<Route path=\"/board-list\" component={BoardList}/>\r\n\t\t\t\t\t\t<AuthRoute path=\"/board-write\" component={BoardWrite} auth={isLogin}/>\r\n\t\t\t\t\t\t<AuthRoute path=\"/board-view/:postNo\" component={BoardView} auth={isLogin}/>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</main>\r\n\t\t\t</BrowserRouter>\r\n\t\t</PostContext.Provider>\r\n\t)\r\n}","import Api from \"./api\";\r\n\r\nclass Post extends Api {\r\n\t// eslint-disable-next-line\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\r\n\tasync getList(params) {\r\n\t\treturn await this.requestGet('/post/list', params);\r\n\t}\r\n\t\r\n\tasync getPost(params) {\r\n\t\treturn await this.requestGet('/post', params);\r\n\t}\r\n\r\n\tasync addPost(params) {\r\n\t\treturn await this.requestPost('/post', params);\r\n\t}\r\n\r\n\tasync updatePost(params) {\r\n\t\treturn await this.requestPut('/post', params);\r\n\t}\r\n\r\n\tasync deletePost(params) {\r\n\t\treturn await this.requestDelete('/post', params);\r\n\t}\r\n\r\n}\r\n\r\nexport default Post;","import { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport memberSlice from \"./member\";\r\nimport logger from \"redux-logger\";\r\n\r\nconst reducer = combineReducers({\r\n\tmember: memberSlice.reducer,\r\n})\r\n\r\nconst store = configureStore({\r\n\treducer,\r\n\tmiddleware: getDefaultMiddleware => getDefaultMiddleware().concat(logger),\r\n})\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './css/reset.css';\nimport './css/custom.css';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n\t<Provider store={store}>\n    <App />\n\t</Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}